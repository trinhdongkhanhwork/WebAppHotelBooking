spring.application.name=WebAppHotelBooking
server.port = 8080

#  Connection url for the database
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.url = jdbc:mysql://localhost:3306/HotelBooking

# SQLSERVER username and password
spring.datasource.username = root
spring.datasource.password = root

# Keep the connection alive if idle for along time (needed in production)
spring.datasource.dbcp2.test-while-idle = true
spring.datasource.dbcp2.validation-query = SELECT 1

# ===================
# JPA / HIBERNATE
# ===================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is )
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create,create-drop,update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update
# create, create-drop, update, validate, none

# Naming strategy
spring.jpa.hibernate.naming.physical-strategy = org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect

server.servlet.session.cookie.http-only=true
server.servlet.session.tracking-modes=cookie

#app.jwt.secret=HotelBooking
# OAuth2 Configuration

## Mail Configuration
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=tingkhanh2004@gmail.com
#spring.mail.password=zawqelipmtulpnxk
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#
## Cloudinary Configuration
#cloudinary.cloud-name=dxowhxfwj
#cloudinary.api-key=493466681247413
#cloudinary.api-secret=QXjt9-bbjJK_TDjpZsoLJsAQ2Rk